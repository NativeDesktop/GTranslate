"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inferArch = exports.inferPlatform = exports.supportedPlatforms = exports.supportedArchs = void 0;
const os = require("os");
const log = require("loglevel");
// Ideally we'd get this list directly from electron-packager, but it's not
// accessible in the package without importing its private js files, which felt
// dirty. So if those change, we'll update these as well.
// https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html#platform
// https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html#arch
exports.supportedArchs = ['ia32', 'x64', 'armv7l', 'arm64'];
exports.supportedPlatforms = [
    'darwin',
    'linux',
    'mac',
    'mas',
    'osx',
    'windows',
];
function inferPlatform() {
    const platform = os.platform();
    if (platform === 'darwin' ||
        // @ts-ignore
        platform === 'mas' ||
        platform === 'win32' ||
        platform === 'linux') {
        log.debug('Inferred platform', platform);
        return platform;
    }
    throw new Error(`Untested platform ${platform} detected`);
}
exports.inferPlatform = inferPlatform;
function inferArch() {
    const arch = os.arch();
    if (!exports.supportedArchs.includes(arch)) {
        throw new Error(`Incompatible architecture ${arch} detected`);
    }
    log.debug('Inferred arch', arch);
    return arch;
}
exports.inferArch = inferArch;
//# sourceMappingURL=inferOs.js.map